# User Documentation – Book Manager Application

## Overview
This application is a desktop-based Book Manager, allowing users to manage their personal book collection.
It provides the following features:

- Add a new book (title, author, genre)
- Edit existing book entries directly in the table
- Real-time search books by keyword
- Filter books by genre
- Mark/unmark favorites via checkbox
- View only favorite books
- Delete selected books
- Manage genres via a dedicated dialog (add, delete, save)
- Load genre options from an external XML file (genres.xml)


## Requirements
Java 17 or later

Maven (for building and running the application)


## How to Build and Run
    Step1: Extract the project.

    Step2: Build the project:
            mvn clean compile

    Step3: Run the application:
            mvn exec:java -Dexec.mainClass="com.example.Main"


## Usage Guide
### Add a Book
    Step1: Enter the Title, Author, and select a Genre from the dropdown.

    Step2: Click Add Book.

    Example Books (for Testing)
        After launching the application, try adding some sample books using the form:
        - Title: The Hobbit, Author: J.R.R. Tolkien, Genre: Fantasy
        - Title: Dune, Author: Frank Herbert, Genre: Fiction
        - Title: The Da Vinci Code, Author: Dan Brown, Genre: Mystery
        - Title: Harry Potter and the Sorcerer's Stone, Author: J.K. Rowling, Genre: Fantasy

### Search and Filter
    ・Type a keyword (partial match) to search title, author, or genre.

    ・Select a genre from the dropdown (default "-" shows all).

    ・Check Favorites only to view only books marked as favorites.

    ・All filters apply automatically as you type or select.

    ・Click the Reset button to clear all filters and show the full book list.

### Mark/Unmark Favorite
    Step1: In the table, toggle the checkbox under the "Favorite" column to mark or unmark a book.

### Delete a Book
    Step1: Select a book from the list.

    Step2: Click Delete Selected Book.

### Manage genres
    Step1:　Click the Manage Genres button to open the genre management dialog.

    Step2: Inside the dialog, you can:

            Add: Enter a new genre name.

            Delete: Select and remove one or more genres.

    Step3: Click Save button. Persist current genre list to genres.xml.

    Step4: Click Close button. Close the dialog and reload the genre list in the main UI.

    Genres are immediately reflected in dropdowns after closing the dialog.


## Additional Notes
### Genre Configuration: genres.xml

The list of genres available in the application is loaded from the XML configuration file:
src/main/resources/genres.xml

```xml
<genres>
    <genre>Fantasy</genre>
    <genre>Fiction</genre>
    <genre>Romance</genre>
    <genre>Mystery</genre>
    <genre>Biography</genre>
    <genre>Non-fiction</genre>
</genres>
```

To add a new genre (e.g., "Science"), insert a new <genre> tag inside the <genres> element:
```
<genre>Science</genre>
```
After editing the file, restart the application to apply the changes. The genre list is reloaded on startup.

You can also edit genres from the GUI via Manage Genres, and the XML will be automatically updated.

### Data Storage
Book data is stored in an SQLite database file named:books.db
    ・Created automatically in the project root.
    ・Stores title, author, genre, and favorite status.
    ・Persistent across application restarts.